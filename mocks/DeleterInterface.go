// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	context "context"

	contracts "github.com/kneu-messenger-pigeon/client-framework/delayedDeleter/contracts"
	mock "github.com/stretchr/testify/mock"

	sync "sync"
)

// DeleterInterface is an autogenerated mock type for the DeleterInterface type
type DeleterInterface struct {
	mock.Mock
}

// AddToQueue provides a mock function with given fields: messageDeleteTask
func (_m *DeleterInterface) AddToQueue(messageDeleteTask *contracts.DeleteTask) {
	_m.Called(messageDeleteTask)
}

// Execute provides a mock function with given fields: ctx, wg
func (_m *DeleterInterface) Execute(ctx context.Context, wg *sync.WaitGroup) {
	_m.Called(ctx, wg)
}

// SetHandler provides a mock function with given fields: handler
func (_m *DeleterInterface) SetHandler(handler contracts.DeleteHandlerInterface) {
	_m.Called(handler)
}

type mockConstructorTestingTNewDeleterInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleterInterface creates a new instance of DeleterInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleterInterface(t mockConstructorTestingTNewDeleterInterface) *DeleterInterface {
	mock := &DeleterInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
