// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	contracts "github.com/kneu-messenger-pigeon/client-framework/delayedDeleter/contracts"
	mock "github.com/stretchr/testify/mock"
)

// DeleteHandlerInterface is an autogenerated mock type for the DeleteHandlerInterface type
type DeleteHandlerInterface struct {
	mock.Mock
}

// HandleDeleteTask provides a mock function with given fields: task
func (_m *DeleteHandlerInterface) HandleDeleteTask(task *contracts.DeleteTask) error {
	ret := _m.Called(task)

	var r0 error
	if rf, ok := ret.Get(0).(func(*contracts.DeleteTask) error); ok {
		r0 = rf(task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeleteHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleteHandlerInterface creates a new instance of DeleteHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleteHandlerInterface(t mockConstructorTestingTNewDeleteHandlerInterface) *DeleteHandlerInterface {
	mock := &DeleteHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
