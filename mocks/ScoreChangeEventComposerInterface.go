// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	events "github.com/kneu-messenger-pigeon/events"

	mock "github.com/stretchr/testify/mock"

	scoreApi "github.com/kneu-messenger-pigeon/score-api"
)

// ScoreChangeEventComposerInterface is an autogenerated mock type for the ScoreChangeEventComposerInterface type
type ScoreChangeEventComposerInterface struct {
	mock.Mock
}

// Compose provides a mock function with given fields: event, currentScore
func (_m *ScoreChangeEventComposerInterface) Compose(event *events.ScoreChangedEvent, currentScore *scoreApi.Score) scoreApi.Score {
	ret := _m.Called(event, currentScore)

	var r0 scoreApi.Score
	if rf, ok := ret.Get(0).(func(*events.ScoreChangedEvent, *scoreApi.Score) scoreApi.Score); ok {
		r0 = rf(event, currentScore)
	} else {
		r0 = ret.Get(0).(scoreApi.Score)
	}

	return r0
}

type mockConstructorTestingTNewScoreChangeEventComposerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewScoreChangeEventComposerInterface creates a new instance of ScoreChangeEventComposerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewScoreChangeEventComposerInterface(t mockConstructorTestingTNewScoreChangeEventComposerInterface) *ScoreChangeEventComposerInterface {
	mock := &ScoreChangeEventComposerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
